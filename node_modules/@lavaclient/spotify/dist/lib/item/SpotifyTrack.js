"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTrackFactory = exports.SpotifyTrack = void 0;
const SpotifyItem_1 = require("../abstract/SpotifyItem");
class SpotifyTrack extends SpotifyItem_1.SpotifyItem {
    constructor(manager, track) {
        super(manager);
        this.type = SpotifyItem_1.SpotifyItemType.Track;
        this.#track = null;
        this.data = track;
    }
    #track;
    get name() {
        return this.data.name;
    }
    get artists() {
        return this.data.artists;
    }
    get album() {
        return this.data.album;
    }
    get artwork() {
        const undef = this.album.images.some(i => !i.height || !i.width);
        if (undef) {
            return this.album.images[0].url;
        }
        return this.album.images.sort((a, b) => b.width - a.width)[0].url;
    }
    async resolveYoutubeTrack() {
        if (this.#track != null) {
            return this.#track;
        }
        let query = `${this.manager.searchPrefix}`;
        query += this.manager.options.searchFormat
            .replace("{track}", this.data.name)
            .replace("{artist}", this.data.artists[0].name);
        const searchResults = await this.manager.manager.rest.loadTracks(query);
        return (this.#track = searchResults.tracks[0]);
    }
}
exports.SpotifyTrack = SpotifyTrack;
function createTrackFactory(manager) {
    return track => new SpotifyTrack(manager, track);
}
exports.createTrackFactory = createTrackFactory;
